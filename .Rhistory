install.package("kernsmooth")
install.packages("kernsmooth")
install.packages("kern smooth")
install.packages("KernSmooth")
library(kernsmooth)
library(KernSmooth)
library(Rmysql)
install.packages("RMySQL")
library(RMySQL)
library(XML)
library(httr); html2 = GET(url)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
library(httr); html2 = GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(content2,asText=TRUE)
xpathSApply(parsedHtml,"//title",xmlValue)
?nrows()
?nchar()
library(XML)
library(httr); html2 = GET(url)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
library(httr); html2 = GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(content2,asText=TRUE)
data2 <- xpathSApply(parsedHtml,"//title",xmlValue)
nrows <- c(10,20,30,100)
data3 <- data2[nrows,]
lengths <- nchar(data3)
head(data2)
head(parsedHtml)
head(conten2)
head(content2)
?xpathSApply
?html
library(XML)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
library(httr);
html <- htmlTreeParse(url,useInternalNodes=T)
nrows <- c(10,20,30,100)
html
head(html)
row30 <- html[30,]
html
attributes(html)
html
html[1,]
?readline()
readline(html,10)
countLines(html)
readLins(html,10)
readLines(html,10)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
row10 <- readLines(con,10)
row20 <- readLines(con,20)
row30 <- readLines(con,30)
row100 <- readLines(con,100)
close(con)
row10
readLines(row10,-1)
row10[10,]
row10
nchars("<meta name=\"Distribution\" content=\"Global\" />")
nchar("<meta name=\"Distribution\" content=\"Global\" />")
attributes(row10)
row20
nchar("<script type=\"text/javascript\">")
row100
row30
nchar("  })();")
row100
nchar("\t\t\t\t<ul class=\"sidemenu\">")
?data.frame
?read.fwf
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data1 <- read.fwf(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
lens <- c(9,8,8,8,8)
data1 <- read.fwf(con,lens)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
lens <- c(9,8,8,8,8)
data1 <- read.fwf(con,header = TRUE, lens)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
lens <- c(9,8,8,8,8)
data1 <- read.fwf(con,header = TRUE, lens)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,header = TRUE, lens)
?read.fwf()
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
htmlCode = readLines(con)
lens <- c(9,8,8,8,8)
# data1 = read.fwf(con,header = TRUE, lens)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
htmlCode = readLines(con)
lens <- c(9,8,8,8,8)
# data1 = read.fwf(con,header = TRUE, lens)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
htmlCode = readLines(con)
lens <- c(9,8,8,8,8)
# data1 = read.fwf(con,header = TRUE, lens)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
htmlCode = readLines(con)
lens <- c(9,8,8,8,8)
# data1 = read.fwf(con,header = TRUE, lens)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,header = TRUE, lens)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,lens, header = TRUE, skip = 3)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,lens, header = TRUE, skip = 2)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,lens, header = TRUE, skip = 1)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,lens, header = FALSE, skip = 4)
head(data1)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,lens, header = FALSE, skip = 5)
head(data1)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,8,8,8,8)
data1 = read.fwf(con,lens, header = FALSE, skip = 4, stringsAsFactors = FALSE)
head(data1)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(9,-5,8,-5,8,-5,8,-5,8)
data1 = read.fwf(con,lens, header = FALSE, skip = 4, stringsAsFactors = FALSE)
head(data1)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(-1,9,-5,8,-5,8,-5,8,-5,8)
data1 = read.fwf(con,lens, header = FALSE, skip = 4, stringsAsFactors = FALSE)
head(data1)
data2 <- data1[,4]
data2
sum(data2)
data3 <- as.numeric(data2)
sum(data3)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
lens <- c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4)
data1 = read.fwf(con,lens, header = FALSE, skip = 4, stringsAsFactors = FALSE)
data2 <- data1[,4]
data3 <- sum(data2)
data3
data1
head(data1)
sum(data1[,3])
sum(data1[,4])
sum(data1[,5])
sum(data1[,6])
sum(data1,[2])
sum(data1[,2])
head(data1)
newsum <- sum(data1[,8]) + sum(data1[,9])
newsum
# get blogger urls with XML:
library(RCurl)
library(XML)
script <- getURL("www.r-bloggers.com")
doc <- htmlParse(script)
li <- getNodeSet(doc, "//ul[@class='xoxo blogroll']//a")
urls <- sapply(li, xmlGetAttr, "href")
head(li)
head(urls)
setwd("~/Desktop/Peter - Data Science/Reproducible Research/PA1-files")
summary(dailysteps_patched_daytype)
Daytype <- vector(length = nrow(dailysteps_patched))
for (i in 1:nrow(dailysteps_patched)) {
rightformat <- as.Date(dailysteps_patched$date[i])
rightday <- weekdays(rightformat)
ifelse(rightday %in% c("Saturday","Sunday"),
value <- c("Weekend"),
value <- c("Weekday"))
Daytype[i] <- value
}
dailysteps_patched_daytype <- cbind(dailysteps_patched,Daytype)
dailysteps_patched
mean(dailysteps_patched$TotalSteps,na.rm = TRUE)
summary(activitydata_Patched)
summary(intervalsteps)
filename <- c("./repdata-data-activity.zip")
url <- c("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
download.file(url,destfile = filename, method = "curl")
unzip(filename)
summary(activitydata_OG)
library(reshape2) #used to create tidier data frames as needed
library(plyr) #used to calculate over data frames
activitydata_OG <- read.csv("./activity.csv")
summary(activitydata_OG)
summary(activitydata_OG)
library(knitr)
head(dailysteps_patched_daytype)
head(dailysteps_patched_daytype)
source('~/.active-rstudio-document', echo=TRUE)
head(dailysteps_patched_daytype)
dailysteps_patched_weekend <- dailysteps_patched_daytype[daytype == "Weekend"]
dailysteps_patched_weekday <- dailysteps_patched_daytype[daytype == "Weekday"]
dailysteps_patched_weekend <- dailysteps_patched_daytype[.daytype == "Weekend"]
dailysteps_patched_weekday <- dailysteps_patched_daytype[.daytype == "Weekday"]
dailysteps_patched_weekend <- dailysteps_patched_daytype[
dailysteps_patched_daytype$daytype == "Weekend"]
dailysteps_patched_weekday <- dailysteps_patched_daytype[
dailysteps_patched_daytype$daytype == "Weekday"]
summary(dailysteps_patched_weekend)
summary(dailysteps_patched_daytype)
dailysteps_patched_weekend <- dailysteps_patched_daytype[Daytype == "Weekend"]
dailysteps_patched_weekday <- dailysteps_patched_daytype[Daytype == "Weekday"]
?subset
dailysteps_patched_weekend <- subset(dailysteps_patched_daytype,
Daytype == "Weekend")
summary(dailysteps_patched_weekend)
dailysteps_patched_weekend <- subset(dailysteps_patched_daytype,
Daytype == "Weekend")
dailysteps_patched_weekday <- subset(dailysteps_patched_daytype,
Daytype == "Weekday")
summary(dailysteps_patched_weekday)
intervalsteps_weekend <- ddply(dailysteps_patched_weekdend,c("interval"),
summarize, AvgSteps = mean(steps,na.rm = TRUE))
intervalsteps_weekday <- ddply(dailysteps_patched_weekday,c("interval"),
summarize, AvgSteps = mean(steps,na.rm = TRUE))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?plot
library(ggplot2)
summary(intervalsteps_weekend)
weekendplot <- ggplot(intervalsteps_weekend, aes(x=interval,y=AvgSteps)) +
geam_line() + ggtitle("Weekend Activity Pattern")
weekdayplot <- ggplot(intervalsteps_weekday, aes(x=interval,y=AvgSteps)) +
geam_line() + ggtitle("Weekday Activity Pattern")
weekendplot <- ggplot(intervalsteps_weekend, aes(x=interval,y=AvgSteps)) +
geom_line() + ggtitle("Weekend Activity Pattern")
weekdayplot <- ggplot(intervalsteps_weekday, aes(x=interval,y=AvgSteps)) +
geom_line() + ggtitle("Weekday Activity Pattern")
weekendplot <- ggplot(intervalsteps_weekend, aes(x=interval,y=AvgSteps)) +
geom_line() + ggtitle("Weekend Activity Pattern")
weekdayplot <- ggplot(intervalsteps_weekday, aes(x=interval,y=AvgSteps)) +
geom_line() + ggtitle("Weekday Activity Pattern")
multiplot(weekdayplot,weekendplot, cols = 2)
?multiplot
?grid.arrange
?qplot
qplot(intervalsteps_weekend$interval, intervalsteps_weekend$AvgSteps)
qplot(intervalsteps_weekday$interval, intervalsteps_weekday$AvgSteps)
par(mfrow=c(1,2))
plot(intervalsteps_weekday$interval,intervalsteps_weekday$AvgSteps, type = "l",
xlab = c("Time of Day - in 5 minute Increments"),
ylab = c("Mean Steps over Oct/Nov 2012"),
main = c("Average Steps over 5 Minute Interval"))
plot(intervalsteps_weekend$interval,intervalsteps_weekend$AvgSteps, type = "l",
xlab = c("Time of Day - in 5 minute Increments"),
ylab = c("Mean Steps over Oct/Nov 2012"),
main = c("Average Steps over 5 Minute Interval"))
?par
?mtext
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?PLOT
?plot
source('~/.active-rstudio-document', echo=TRUE)
par(mfrow=c(1,2))
plot(intervalsteps_weekday$interval,intervalsteps_weekday$AvgSteps, type = "l",
xlab = c("Time of Day (in 5 minute Increments)"),
ylab = c("Mean Steps over Oct/Nov 2012"),
ylim = c(0,250)
main = c("Average Steps by Time of Day")
sub = c("Weekdays"))
plot(intervalsteps_weekend$interval,intervalsteps_weekend$AvgSteps, type = "l",
xlab = c("Time of Day (in 5 minute Increments)"),
ylab = c("Mean Steps over Oct/Nov 2012"),
ylim = c(0,250)
sub = c("Weekends"))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
